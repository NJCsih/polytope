# Looks like the usual ~/.nushell/ also has a history file, and a plugins file.
# I'm ignoring the history, looking to setup impermance which will wipe that regularly
# Plugins I'll probably do more once nu's updates for plugins get a bit more popular and I actually start using them, the one from my previous arch install looks like it was some autogenerated rust stuff, so I'm not gonna bother porting that manually.

{
  lib,
  config,
  pkgs,
  #inputs,
  ...
}:

let
  inherit (lib) mkEnableOption mkIf;
  cfg = config.polytope.tools.nushell;
in
{
  options.polytope.tools.nushell = {
    enable = mkEnableOption "Nushell";
    zoxide.enable = mkEnableOption "Zoxide integration";
  };

  config = mkIf cfg.enable {

    programs.nushell = {
      enable = true;
      configFile.source = ./config/config.nu;
      envFile.source = ./config/env.nu;
      extraConfig = builtins.readFile ./config/starship.nu;

      environmentVariables = config.home.sessionVariables;
    };

    xdg.configFile."starship.toml" = {
      enable = true;
      source = pkgs.substitute {
        src = ./config/starship.toml;
        substitutions = [
          "--replace-fail"
          "##COL1##"
          "486878"
          "--replace-fail"
          "##COL2##"
          "7898a8"
          "--replace-fail"
          "##COL3##"
          "a8a8b8"
          "--replace-fail"
          "##COL4##"
          "d8d8d8"
        ];
      };
    };

    programs.zellij.enable = true;
    #xdg.configFile."zellij/config.kdl" = mkIf cfg.zellij.enable {
    home.file.".config/zellij/config.kdl" = {
      text = builtins.readFile ./config/zellij.kdl;
    };

    programs.zoxide = mkIf cfg.zoxide.enable {
      enable = true;
      enableNushellIntegration = true;
    };
  };
}
